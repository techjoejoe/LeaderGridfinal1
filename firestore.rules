
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users can be created by anyone, but only the user can read/write their own document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
    
    // Classes can be created by authenticated users (trainers)
    // Only the trainer of a class can update it.
    // Any authenticated user can read class data (needed for joining)
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.trainerUid == request.auth.uid;
      allow update: if request.auth != null && get(/databases/$(database)/documents/classes/$(classId)).data.trainerUid == request.auth.uid;
    }
    
    // Contests can be read by anyone (so they can be listed)
    // Creation/deletion is handled by cloud functions with their own security.
    match /contests/{contestId} {
       allow read: if true;
       allow create, delete, update: if request.auth != null && get(/databases/$(database)/documents/classes/$(resource.data.classId)).data.trainerUid == request.auth.uid;
    }
    
    // Images can be read by anyone.
    // Images can be created by any authenticated user within a valid contest.
    // Votes can be updated by any authenticated user.
    match /images/{imageId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update (votes): if request.auth != null;
    }
    
    // User votes can only be accessed by the user who owns them.
    match /users/{userId}/user_votes/{contestId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}
